import 'package:va_client/models/message_model.dart';
import 'package:va_client/models/message_response.dart';
import 'package:va_client/utils/APIManager.dart';
// TODO: —É–±—Ä–∞—Ç—å –ø–æ–≤—Ç–æ—Ä –ø–æ—Å–ª–µ —Å—Ç–∞—Ç—É—Å–∞
Future<MessageResponse> sendQuestion(String message) async {
  var question = message.split('\s+');
  var response = await APIManager.sendQuestionApi(
      {'question': question.take(10).join(' ')}).then((value) {
    var statusCode = value['status'];
    if (statusCode == 200) {
      return MessageResponse.fromJson(value['response']);
    } else if (statusCode == 500) {
      return MessageResponse(
          message: Message(
              message: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòÅ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ', sender: 'VA'),
          optionalQuestions: []);
    }
  }, onError: (error) {
    return Future.error(MessageResponse(
        message: Message(message: '–ù–µ—Ç —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º üòÅ', sender: 'VA'),
        optionalQuestions: []));
  });

  return response;
}

Future<MessageResponse> sendWrongAnswer(List<Message> messages, String userId) async {
  var response =  await APIManager.sendWrongAnswer({'messages': messages, 'userId': userId}).then((value) {
    var statusCode = value['status'];
    if (statusCode == 200) {
      return MessageResponse.fromJson(value['response']);
    } else if (statusCode == 500) {
      return MessageResponse(
          message: Message(
              message: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòÅ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ', sender: 'VA'),
          optionalQuestions: []);
    }
  }, onError: (e) {
    return Future.error(MessageResponse(
        message: Message(message: '–ù–µ—Ç —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º üòÅ', sender: 'VA'),
        optionalQuestions: []));
  });

  return response;
}
